name: Draft

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
    contents: write
    pages: write
    id-token: write

jobs:
    bump:
        name: Bump Versions
        runs-on: ubuntu-latest
        outputs:
          release-body: ${{ steps.update-changelog.outputs.release-notes }}
        steps:
          - name: Checkout repository
            uses: actions/checkout@v4
            with:
              ref: "main"

          - name: Update changelog
            id: update-changelog
            uses: thomaseizinger/keep-a-changelog-new-release@3.1.0
            with:
              tag: ${{ github.ref_name }}
              changelogPath: "docs/changelog.md"

          - name: Bump Wally version
            id: version-bump
            uses: DervexDev/file-version-bumper@v1
            with:
              path: ./wally.toml

          - name: Commit and push
            uses: EndBug/add-and-commit@v9
            if: ${{ github.ref_name != steps.version-bump.outputs.old_version }}
            with:
              message: Bump version to ${{ github.ref_name }}
              default_author: github_actions

          - name: Update tag
            if: ${{ github.ref_name != steps.version-bump.outputs.old_version }}
            run: |
              git tag -f ${{ github.ref_name }}
              git push -f --tags

    publish-build:
        name: Publish Assets
        runs-on: ubuntu-latest
        needs: bump
        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Setup Rokit
            uses: CompeyDev/setup-rokit@v0.1.0

          - name: Install Wally dependencies
            run: wally install

          - name: Generate sourcemap
            run: rojo sourcemap standalone.project.json --output sourcemap.json

          - name: Generate package types
            run: wally-package-types --sourcemap sourcemap.json Packages

          - name: Format code
            run: stylua src/

          - name: Build standalone
            run: rojo build standalone.project.json --output ./Standalone.rbxm

          - name: Draft release
            uses: softprops/action-gh-release@v2.0.8
            with:
              tag_name: ${{ github.ref_name }}
              name: ${{ github.ref_name }}
              prerelease: ${{ contains(github.ref_name, 'rc') }}
              generate_release_notes: true
              body: |
                ## Changelog
                ${{ needs.bump.outputs.release-body }}
              files: |
                ./Standalone.rbxm

    publish-package:
        name: Publish Package
        runs-on: ubuntu-latest
        needs: bump
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Setup Rokit
          uses: CompeyDev/setup-rokit@v0.1.0

        - name: Log In
          env:
            WALLY_AUTH: ${{ secrets.WALLY_AUTH_TOKEN }}
          run: |
            mkdir ~/.wally
            printenv WALLY_AUTH > ~/.wally/auth.toml

        - name: Publish
          run: |
            wally publish

    publish-announcement:
        name: Publish Announcement
        runs-on: ubuntu-latest
        needs: [publish-package, publish-build]
        steps:
        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Get project information
          id: project_info
          run: |
            echo "REPO_NAME=${{ github.repository }}" >> $GITHUB_ENV
            echo "RELEASE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV


        - name: Send webhook
          uses: actions/github-script@v6
          with:
            script: |
              const net = require('node-fetch');
              const projectRole = "1298443968794722334";
              const webhookUrl = process.env.WEBHOOK_URL;
              const projectName = process.env.REPO_NAME;
              const formattedProjectName = projectName.charAt(0).toUpperCase() + projectName.slice(1);
              const tag = process.env.RELEASE_TAG;
  
              const body = {
                content: `<@&${projectRole}>`,
                embeds: [
                  {
                    title: `Release ${tag} Â· ${formattedProjectName}`,
                    description: `Release notification for the latest version of ${formattedProjectName}`,
                    url: `https://github.com/luminlabsdev/${projectName}/releases/tag/${tag}`,
                    color: 7506646,
                    author: {
                      name: "GitHub",
                    },
                  },
                ],
              };
  
              const response = await net(webhookUrl, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(body),
              });
  
              if (!response.ok) {
                throw new Error(`${response.status}: ${response.statusText}`);
              }
